openapi: 3.0.0
info: {title: API, description: 接口模板, version: V1}
paths:
  /api/v1/user/create_user:
    post:
      tags: [User]
      summary: |-
        创建用户
        这是描述
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  user: {$ref: '#/components/schemas/User'}
                  users: {$ref: '#/components/schemas/User'}
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                email: {type: string}
                emails: {type: string}
                gender: {type: string}
                genders: {type: string}
                id: {type: integer}
                ids: {type: integer}
                ym: {type: string}
                ymarray: {type: string}
                ymarrayn: {type: string}
                file: {type: string}
  /api/v1/user/get_users:
    post:
      tags: [User]
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  val: {type: string}
                  user: {$ref: '#/components/schemas/User'}
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id: {type: integer}
                gender: {type: string}
                page: {type: integer}
                testUser: {$ref: '#/components/schemas/User'}
                testUsers: {$ref: '#/components/schemas/User'}
  /api/v1/article/get_article_comments:
    post:
      tags: [Article]
      summary: 获取文章评论
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  comments: {$ref: '#/components/schemas/ArticleComment'}
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                articleId: {type: integer}
                page: {type: integer}
  /api/v1/article/create_article:
    post:
      tags: [Article]
      summary: 添加文章
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  article: {$ref: '#/components/schemas/Article'}
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                title: {type: string}
                content: {type: string}
  /api/v1/article/get_article:
    post:
      tags: [Article]
      summary: 取得一篇文章
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  article: {$ref: '#/components/schemas/Article'}
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id: {type: integer}
  /api/v1/article/get_articles:
    post:
      tags: [Article]
      summary: 获取文章列表
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  articles: {$ref: '#/components/schemas/Article'}
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties: {}
components:
  schemas:
    ArticleComment:
      properties:
        id: {type: integer}
        user: {type: object, $ref: '#/components/schemas/User'}
        content: {type: string}
        createdAt: {type: string}
    Article:
      properties:
        id: {type: integer}
        title: {type: string}
        content: {type: string}
        user: {type: object, $ref: '#/components/schemas/User'}
        commentsCount: {type: integer}
        favorite: {type: boolean}
        hot: {type: boolean}
        createdAt: {type: string}
    SharePayload:
      properties:
        title: {type: string}
        description: {type: string}
        icon: {type: string}
        url: {type: string}
    UserProfile:
      properties:
        name: {type: string}
    User:
      properties:
        name: {type: string}
        id: {type: integer}
        avatar: {type: string}

