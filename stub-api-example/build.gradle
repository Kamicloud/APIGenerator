
plugins {
    id 'java'
}
allprojects {
    repositories {
        mavenLocal()
        jcenter()
        // ADD IT HERE
        maven { url "https://jitpack.io" }
    }
}

group 'com.github.kamicloud'
version '1.0-SNAPSHOT'

//repositories {
//    mavenCentral()
//}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    implementation project(':stub-api-core')
//    compile 'com.github.jitpack.gradle-modular:client:1.1'
    implementation 'com.github.kamicloud.gradle-modular:client:1.3'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}


jar {
    version = '0.0.1'
    from {
        //添加依懒到打包文件
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtime.collect{zipTree(it)}
    }

    manifest {
        attributes "Manifest-Version": 1.0,
            'Main-Class': 'com.kamicloud.generator.Generator'
    }
}

task clearLaravel(type: Delete) {
    setDelete './storage/generator'
}

task copyLaravel(type: Copy) {
    from configurations.runtime
    from 'build/classes/java/main'
    into('./storage/generator')
}

task clearClient(type: Delete) {
    setDelete './storage/generator'
}

task copyClient(type: Copy) {
    from configurations.runtime
    from 'build/classes/java/main'
    into('./storage/generator')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}


task release(type: Copy, dependsOn: [build, sourcesJar, clearLaravel, copyLaravel])

task releaseClient(type: Copy, dependsOn: [build, sourcesJar, clearClient, copyClient])

compileJava.dependsOn processResources
